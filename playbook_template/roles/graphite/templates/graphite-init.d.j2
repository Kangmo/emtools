#!/bin/bash
#
# graphite - This script starts and stops the graphite web server service.
#
# chkconfig:   - 85 15
# description: graphite server
# processname: uwsgi
# config:      

### BEGIN INIT INFO
# Provides:          infinidb-em-graphite
# Required-Start:    $local_fs $remote_fs $network $syslog $all
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop InfiniDB Enterprise Manager graphite
### END INIT INFO

# Source function library.
test -f /etc/rc.d/init.d/functions && source /etc/rc.d/init.d/functions

EM_PREFIX="{{ install_prefix }}"
exec="$EM_PREFIX/graphite/env/bin/uwsgi"
prog=$(basename "$exec")
GRAPHITE_PIDDIR="$EM_PREFIX/run"
GRAPHITE_PIDFILE="$GRAPHITE_PIDDIR/graphite.pid"
GRAPHITE_LOGFILE="$EM_PREFIX/log/graphite.log"
args="--yaml $EM_PREFIX/conf/{{ graphite_uwsgi_conf }} --daemonize $GRAPHITE_LOGFILE --pidfile $GRAPHITE_PIDFILE"
export INFINIDB_HOME=$EM_PREFIX/graphite/env
export LD_LIBRARY_PATH=$EM_PREFIX/python-stack/lib
RUNAS="{{ infinidb_em_user }}"

restart() {
    stop
    start
}

status() {
	if [ -f $GRAPHITE_PIDFILE ]; then
		ps -A -opid | egrep -qs $(cat $GRAPHITE_PIDFILE)
		if [ $? -eq 0 ]; then
			echo "$prog (pid $(cat $GRAPHITE_PIDFILE)) is running..."
			return 0
		fi
	fi

	echo "$prog is stopped"
	return 1
}

start() {
    echo -n 'Starting graphite...'
    if [ -f /etc/redhat-release ]; then
        daemon --user "${RUNAS:-root}" "$exec" "$args >/dev/null 2>&1"

    else
        start-stop-daemon --quiet --oknodo --chuid $RUNAS --exec $exec --start -- $args
    fi
    retval=$?
    echo
    return $retval
}

stop() {
    echo -n 'Stopping graphite...'
    if [ -f /etc/redhat-release ]; then
        ps -A -opid | egrep -qs $(cat $GRAPHITE_PIDFILE)
        while [ $? -eq 0 ] 
        do
            killproc -p "$GRAPHITE_PIDFILE" "$prog" -INT
            ps -A -opid | egrep -qs $(cat $GRAPHITE_PIDFILE)
        done    
    else
	start-stop-daemon --stop --retry 5 --quiet --oknodo --pidfile "$GRAPHITE_PIDFILE" --signal INT
    fi
    retval=$?
    echo
    return $retval
}

case $1 in
    condrestart|try-restart)
        status 2>/dev/null && restart
        ;;
    reload|force-reload)
        restart
        ;;
    restart)
        restart
        ;;
    start)
        start
        ;;
    status)
        status
        ;;
    status_q)
        status >/dev/null 2>&1
        ;;
    stop)
        stop
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
        ;;
esac

exit $?
